(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{833:function(t,s,a){"use strict";a.r(s);var e=a(27),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"kafka-설정하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka-설정하기"}},[t._v("#")]),t._v(" Kafka 설정하기")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("실습 환경")]),t._v(" "),a("ul",[a("li",[t._v("💡 Java10 (Java 8이상 필수)")]),t._v(" "),a("li",[t._v("💡 Windows 10")]),t._v(" "),a("li",[t._v("💡 Git Bash")])]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("Kafka의 개념과 도입 이유는 지난 포스팅에서 다루었고, 바로 이전 포스팅에서 "),a("strong",[t._v("zookeeper-server")]),t._v("를 실행하기 위해 "),a("strong",[t._v("zookeeper.properties")]),t._v("를 작성하는 방법을 알아보았다.")]),t._v(" "),a("p",[t._v("이번 포스팅에서는 "),a("strong",[t._v("kafka-server")]),t._v("를 실행하기 위한 "),a("strong",[t._v("server.properties")]),t._v(" 코드를 분석해보자.")]),t._v(" "),a("h2",{attrs:{id:"_1-server-properties-코드-분석"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-server-properties-코드-분석"}},[t._v("#")]),t._v(" 1. server.properties 코드 분석")]),t._v(" "),a("blockquote",[a("p",[t._v("이전에 살펴본 것 처럼 kafka를 실행하려면 "),a("strong",[t._v("kafka-server-start.bat")]),t._v(" 파일에 인자 값으로 "),a("a",{attrs:{href:"http://server.pro",target:"_blank",rel:"noopener noreferrer"}},[t._v("server.pro"),a("OutboundLink")],1),t._v("perties 속성을 주어야했다.")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("kafka-server-start.bat")]),t._v(" "),a("ul",[a("li",[t._v("윈도우 OS에서 kafka 서버 실행 파일")])])]),t._v(" "),a("li",[a("strong",[t._v("server.properties")]),t._v(" "),a("ul",[a("li",[t._v("Kafka 관련 설정 파일")])])])]),t._v(" "),a("p",[t._v("설정 파일 내부를 간단히 살펴보자.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# config/server.properties")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Server Basics #############################")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Broker의 ID로 Cluster내 Broker를 구분하기 위해 사용(Unique 값)")]),t._v("\nbroker.id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Socket Server Settings #############################")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Broker가 사용하는 호스트와 포트를 지정, 형식은 PLAINTEXT://your.host.name:port 을 사용")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("listeners")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PLAINTEXT://:9092\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Producer와 Consumer가 접근할 호스트와 포트를 지정, 기본값은 listeners를 사용")]),t._v("\nadvertised.listeners"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("PLAINTEXT://localhost:9092\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 네트워크 요청을 처리하는 Thread의 개수, 기본값 3")]),t._v("\nnum.network.threads"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# I/O가 생길때 마다 생성되는 Thread의 개수, 기본값 8")]),t._v("\nnum.io.threads"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# socket 서버가 사용하는 송수신 버퍼 (SO_SNDBUF, SO_RCVBUF) 사이즈, 기본값 102400")]),t._v("\nsocket.send.buffer.bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102400")]),t._v("\nsocket.receive.buffer.bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("102400")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 서버가 받을 수 있는 최대 요청 사이즈이며, 서버 메모리가 고갈 되는 것 방지")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# JAVA의 Heap 보다 작게 설정해야 함, 기본값 104857600")]),t._v("\nsocket.request.max.bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("104857600")]),t._v("\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Log Basics #############################")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 로그 파일을 저장할 디렉터리의 쉼표로 구분할 수 있음")]),t._v("\nlog.dirs"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("C:/dev/kafka_2.13-2.6.0/logs\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 토픽당 파티션의 수를 의미, ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 입력한 수만큼 병렬처리 가능, 데이터 파일도 그만큼 늘어남")]),t._v("\nnum.partitions"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 시작 시 log 복구 및 종료 시 flushing에 사용할 데이터 directory당 Thread 개수")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 이 값은 RAID 배열에 데이터 directory에 대해 증가하도록 권장 됨")]),t._v("\nnum.recovery.threads.per.data.dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Internal Topic Settings #############################")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 내부 Topic인 "_consumer_offsets", "_transaction_state"에 대한 replication factor')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 개발환경 : 1, 운영할 경우 가용성 보장을 위해 1 이상 권장(3 정도)")]),t._v("\noffsets.topic.replication.factor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ntransaction.state.log.replication.factor"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\ntransaction.state.log.min.isr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Log Retention Policy #############################")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 세그먼트 파일의 삭제 주기, 기본값 hours, 168시간(7일)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 옵션 [ bytes, ms, minutes, hours ] ")]),t._v("\nlog.retention.hours"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("168")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 토픽별로 수집한 데이터를 보관하는 파일")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 세그먼트 파일의 최대 크기, 기본값 1GB")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 세그먼트 파일의 용량이 차면 새로운 파일을 생성")]),t._v("\nlog.segment.bytes"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1073741824")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 세그먼트 파일의 삭제 여부를 체크하는 주기, 기본값 5분(보존 정책)")]),t._v("\nlog.retention.check.interval.ms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Zookeeper #############################")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 주키퍼의 접속 정보")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 쉼표(,)로 많은 연결 서버 포트 설정 가능")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 모든 kafka znode의 Root directory")]),t._v("\nzookeeper.connect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("localhost:2181\n \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 주키퍼 접속 시도 제한시간(time out)")]),t._v("\nzookeeper.connection.timeout.ms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18000")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("############################# Group Coordinator Settings #############################")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# GroupCoordinator 설정 - 컨슈머 rebalance를 지연시키는 시간")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 개발환경 : 테스트 편리를 위해 0으로 정의")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 운영환경 : 3초의 기본값을 설정하는게 좋음")]),t._v("\n group.initial.rebalance.delay.ms"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),a("p",[t._v("더 필요한 설정은 "),a("a",{attrs:{href:"https://kafka.apache.org/documentation/#configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식문서"),a("OutboundLink")],1),t._v("를 확인하고 추가하면 될 것 같다!")]),t._v(" "),a("h2",{attrs:{id:"_2-kafka-실행"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-kafka-실행"}},[t._v("#")]),t._v(" 2. Kafka 실행")]),t._v(" "),a("p",[t._v("zookeeper를 실행한 이후에 새로운 터미널을 열어서 Kafka를 실행해주면 변경한 설정들이 적용되고 정상적으로 실행된다.")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yj_park@yjpark MINGW64 /c/dev/kafka_2.13-2.6.0")]),t._v("\n$ bin/windows/kafka-server-start.bat config/server.properties\n")])])]),a("p",[a("strong",[t._v("실행결과")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:51,229"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO Registered kafka:type"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("kafka.Log4jController MBean "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafka.utils.Log4jControllerRegistration$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:51,618"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO Setting -D jdk.tls.rejectClientInitiatedRenegotiation"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true to disable client-initiated TLS renegotiation "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("org.apache.zookeeper.common.X509Util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:51,699"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO starting "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafka.server.KafkaServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:51,700"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO Connecting to zookeeper on localhost:2181 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafka.server.KafkaServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:51,718"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ZooKeeperClient Kafka server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Initializing a new session to localhost:2181. "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafka.zookeeper.ZooKeeperClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... 생략")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:53,517"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SocketServer "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("brokerId")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Started socket server acceptors and processors "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafka.network.SocketServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:53,527"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO Kafka version: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.6")]),t._v(".0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("org.apache.kafka.common.utils.AppInfoParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:53,527"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO Kafka commitId: 62abe01bee039651 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("org.apache.kafka.common.utils.AppInfoParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:53,527"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO Kafka startTimeMs: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1606106813517")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("org.apache.kafka.common.utils.AppInfoParser"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2020")]),t._v("-11-23 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":46:53,529"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" INFO "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("KafkaServer "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" started "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kafka.server.KafkaServer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("이제 Kafka 기본 환경이 설정됐다!")]),t._v(" "),a("p",[a("strong",[t._v("Reference")])]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://kafka.apache.org/quickstart",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kafka.apache.org/quickstart"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://kafka.apache.org/documentation/#configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kafka.apache.org/documentation/#configuration"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://heodolf.tistory.com/8?category=887831",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://heodolf.tistory.com/8?category=887831"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);