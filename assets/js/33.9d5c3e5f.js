(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{414:function(e,t,s){"use strict";s.r(t);var r=s(27),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"tistory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tistory"}},[e._v("#")]),e._v(" Tistory")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://dev-youngjun.tistory.com/47",target:"_blank",rel:"noopener noreferrer"}},[e._v("[내 블로그]Git - Pull Request 활용하기"),s("OutboundLink")],1)]),e._v(" "),s("h3",{attrs:{id:"likelion-git-과제-참고자료"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#likelion-git-과제-참고자료"}},[e._v("#")]),e._v(" "),s("a",{attrs:{href:"#penguingit-assignment-03"}},[e._v("Likelion Git 과제 참고자료")])]),e._v(" "),s("hr"),e._v(" "),s("blockquote",{staticStyle:{"font-size":"1.12em"},attrs:{"data-ke-style":"style3"}},[s("b",[e._v("Git 기초 공부하기 목차"),s("br")]),s("a",{attrs:{href:"https://dev-youngjun.tistory.com/7"}},[e._v("(1) 2020/02/29 - [Git] - Visual Studio Code에 Github 연동하기")]),s("br"),s("a",{attrs:{href:"https://dev-youngjun.tistory.com/43"}},[e._v("(2) 2020/04/16 - [Git] - Git 이란?")]),s("br"),s("a",{attrs:{href:"https://dev-youngjun.tistory.com/44",target:"_blank",rel:"noopener"}},[e._v("(3) 2020/04/17 - [Git] - Git 설치 및 커멘드 사용법")]),s("br"),s("a",{attrs:{href:"https://dev-youngjun.tistory.com/45"}},[e._v("(4) 2020/04/18 - [Git] - Git Branch 사용하기")]),s("br"),s("a",{attrs:{href:"https://dev-youngjun.tistory.com/46"}},[e._v("(5) 2020/04/19 - [Git] - Git remote 원격 저장소와 Github")]),s("br"),s("b",[e._v("(6) 2020/04/20 - [Git] - Git - Pull Request 활용하기")])]),e._v(" "),s("h3",[e._v("들어가기")]),e._v(" "),s("ul",[s("li",[e._v("한이음 공모전을 진행하면서 github 협업을 하게 됨")]),e._v(" "),s("li",[e._v("pull request 활용이 어려워 공부한 내용 정리")])]),e._v(" "),s("h2",{attrs:{"data-ke-size":"size26"}},[s("span",{staticStyle:{"background-color":"#99cefa"}},[e._v("pull request란?")])]),e._v(" "),s("blockquote",[s("p",[s("b",[e._v("내가 수정한 코드가 있으니 내 branch를 가져가"),s("br"),e._v("검토 후 병합해주세요!")])]),e._v(" "),s("p",[e._v("코드 충돌을 최소화 할 수 있고 push 권한이 없는"),s("br"),e._v("오픈 소스 프로젝트에 기여할 때 많이 사용합니다.")])]),e._v(" "),s("h2",{attrs:{"data-ke-size":"size26"}},[s("span",{staticStyle:{"background-color":"#99cefa"}},[e._v("pull request 사용하기")])]),e._v(" "),s("p",[s("b",[e._v("순서")])]),e._v(" "),s("ol",[s("li",[e._v("Fork")]),e._v(" "),s("li",[e._v("clone, remote 설정")]),e._v(" "),s("li",[e._v("branch 생성")]),e._v(" "),s("li",[e._v("수정 작업 후 add, commit, push")]),e._v(" "),s("li",[e._v("Pull Request 생성")]),e._v(" "),s("li",[e._v("Merge Pull Request")]),e._v(" "),s("li",[e._v("Merge 이후 동기화 및 branch 삭제")])]),e._v(" "),s("h3",[s("b",[e._v("1. Fork")])]),e._v(" "),s("ol",[s("li",[e._v("타겟 프로젝트의 Repository를 자신의 Repository로 Fork 한다.")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(1).png",alt:"img"}}),s("br"),e._v(" "),s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(2).png",alt:"img"}})]),e._v(" "),s("p",[e._v("2. URL이 변경된 것을 확인할 수 있다.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(3).png",alt:"img"}})]),e._v(" "),s("p",[e._v("/hanium_2019/hanium_2019가 아니라"),s("br"),e._v("/jun108059/hanium_2019로 URL이 변경 됨")]),e._v(" "),s("h3",[s("b",[e._v("2. Clone, remote 설정")])]),e._v(" "),s("p",[e._v("1. 자신의 PC에 Fork한 Repository를 Clone한다.")]),e._v(" "),s("pre",{staticClass:"go",attrs:{id:"code_1587022056014","data-ke-language":"go","data-ke-type":"codeblock"}},[s("code",[e._v("$ git clone (복사한 URL)")])]),e._v(" "),s("p",[e._v(" ")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(4).png",alt:"img"}})]),e._v(" "),s("ul",[s("li",[e._v("내 컴퓨터에 생성된 로컬저장소에 원격저장소를 추가한다.")]),e._v(" "),s("li",[e._v("Github에 새로운 Repository를 생성")]),e._v(" "),s("li",[e._v("위와 같은 방법으로"),s("span",[e._v(" ")]),s("span",[e._v("clone or download")]),s("span",[e._v(" ")]),e._v("버튼을 눌러 표시되는 URL을 복사한다.")]),e._v(" "),s("li",[e._v("Clone했던 원본 프로젝트 저장소(origin)를 원격 저장소(github)로 추가")])]),e._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 원본 프로젝트 저장소를 원격 저장소로 추가 ")]),e._v("\n$ git remote add post"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("별명"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("복사한 URL"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 원격 저장소 설정 현황 확인방법 ")]),e._v("\n$ git remote "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("-")]),e._v("v\n")])])]),s("blockquote",[s("p",[e._v("fork, clone한 프로젝트는 origin이라는 별명이 기본으로 추가되어있다. 따라서 따로 설정해주지 않아도 되고, 원격저장소로 추가할 때에는 별명을 설정해 주어야 함")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(5).png",alt:"img"}})]),e._v(" "),s("h3",[s("b",[e._v("3. branch 생성")])]),e._v(" "),s("ul",[s("li",[e._v("자신의 로컬 컴퓨터에서 코드를 추가하는 작업은 branch를 만들어서 진행한다.")])]),e._v(" "),s("ol",[s("li",[e._v("새로운 branch를 만든다.")])]),e._v(" "),s("pre",{staticClass:"go",attrs:{id:"code_1587022097910","data-ke-language":"go","data-ke-type":"codeblock"}},[s("code",[e._v("$ git checkout -b yj_develop")])]),e._v(" "),s("p",[e._v(" ")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(6).png",alt:"img"}})]),e._v(" "),s("p",[e._v("2. 생성된 2개의 branch를 확인할 수 있다.")]),e._v(" "),s("h3",[s("b",[e._v("4. 수정 작업 후 add, commit, push")])]),e._v(" "),s("ul",[s("li",[e._v("code editor를 통해 코드를 수정한다.")]),e._v(" "),s("li",[e._v("작업이 완료되면, 자신의 Github Repository(origin)에 add, commit, push하여 반영한다.")]),e._v(" "),s("li",[e._v("주의사항 push 진행시에 branch 이름을 명시해야 한다.")])]),e._v(" "),s("pre",{staticClass:"go",attrs:{id:"code_1587022115491","data-ke-language":"go","data-ke-type":"codeblock"}},[s("code",[e._v("$ git push origin yj_develop")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(7).png",alt:"img"}})]),e._v(" "),s("p",[e._v(" ")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(8).png",alt:"img"}})]),e._v(" "),s("p",[e._v(" ")]),e._v(" "),s("h3",[s("b",[e._v("5. Pull Request 생성")])]),e._v(" "),s("ul",[s("li",[e._v("push 완료 후 본인 계정의 github 저장소에 접속해 Compare & pull reqeust 버튼이 활성화 되어 있는 것을 확인할 수 있다.")]),e._v(" "),s("li",[e._v("해당 버튼을 선택하여 메시지를 작성하고 Pull Request를 생성한다.")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(9).png",alt:"img"}})]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(10).png",alt:"img"}})]),e._v(" "),s("h3",[s("b",[e._v("6. Merge Pull Request")])]),e._v(" "),s("ul",[s("li",[e._v("Pull Request를 받은 원본 저장소 관리자는 코드 변경내용을 확인하고 Merge 여부를 결정하게 된다.")])]),e._v(" "),s("h3",[s("b",[e._v("7. Merge 이후 동기화 및 branch 삭제")])]),e._v(" "),s("ul",[s("li",[e._v("원본 저장소에 Merge가 완료되면 로컬 코드와 원본 저장소의 코드를 동기화 한다.")]),e._v(" "),s("li",[e._v("작업하던 로컬의 branch를 삭제한다.")])]),e._v("- \n"),s("pre",{staticClass:"go",attrs:{id:"code_1587022187973","data-ke-language":"go","data-ke-type":"codeblock"}},[s("code",[e._v("# 코드 동기화\n$ git pull yj(remote 별명)\n# branch 삭제\n$ git branch -d yj_develop(브랜치 별명)")])]),e._v(" "),s("ul",[s("li",[e._v("나중에 추가로 작업할 일이 있으면 git pull real-blog(remote 별명) 명령을 통해 원본 저장소와 동기화를 진행하고 3~7을 반복한다.")])]),e._v(" "),s("hr"),e._v(" "),s("h1",{attrs:{id:"git-assignment-03"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-assignment-03"}},[e._v("#")]),e._v(" 🐧Git Assignment 03")]),e._v(" "),s("h2",{attrs:{id:"pull-request-merge"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull-request-merge"}},[e._v("#")]),e._v(" Pull Request & Merge")]),e._v(" "),s("p",[s("code",[e._v("Gitkraken")]),e._v(" 사용이 익숙해지면 더 좋겠지만 "),s("code",[e._v("Github")]),e._v("로 하는 방법부터 익혀보아요.")]),e._v(" "),s("h4",{attrs:{id:"_1-팀원-팀장-제외-전원은-본인이름-브랜치에서-본인이름-md-파일에-한줄을-더-추가한-후-커밋을-진행한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-팀원-팀장-제외-전원은-본인이름-브랜치에서-본인이름-md-파일에-한줄을-더-추가한-후-커밋을-진행한다"}},[e._v("#")]),e._v(" 1. 팀원(팀장 제외)전원은 본인이름 브랜치에서 본인이름.md 파일에 한줄을 더 추가한 후 커밋을 진행한다.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(11).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[e._v("브랜치를 변경하고 지난 세션에서 생성했던 본인이름.md 파일에 한 줄을 더 추가해주세요!")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(12).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[e._v("한 줄이 더 추가된 걸 확인할 수 있습니다.")])]),e._v(" "),s("h4",{attrs:{id:"_2-각-팀의-팀원은-feature-본인팀-브랜치-이하-팀-브랜치-로-본인-브랜치의-커밋을-pull-request-이하-풀-리퀘-를-생성한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-각-팀의-팀원은-feature-본인팀-브랜치-이하-팀-브랜치-로-본인-브랜치의-커밋을-pull-request-이하-풀-리퀘-를-생성한다"}},[e._v("#")]),e._v(" 2. 각 팀의 팀원은 feature/본인팀 브랜치( 이하 팀 브랜치)로 본인 브랜치의 커밋을 pull request(이하 풀 리퀘) 를 생성한다.")]),e._v(" "),s("h4",{attrs:{id:"_3-해당-풀-리퀘의-코멘트에-본인-팀장을-호출-이름-하여서-알린다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-해당-풀-리퀘의-코멘트에-본인-팀장을-호출-이름-하여서-알린다"}},[e._v("#")]),e._v(" 3. 해당 풀 리퀘의 코멘트에 본인 팀장을 호출( @이름 )하여서 알린다.")]),e._v(" "),s("h4",{attrs:{id:"_4-팀장은-해당-풀-리퀘를-확인한다-해당-풀리퀘에는-제출자-이름-md-파일-추가만-존재한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-팀장은-해당-풀-리퀘를-확인한다-해당-풀리퀘에는-제출자-이름-md-파일-추가만-존재한다"}},[e._v("#")]),e._v(" 4. 팀장은 해당 풀 리퀘를 확인한다. (해당 풀리퀘에는 제출자-이름.md 파일 추가만 존재한다.)")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(13).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[e._v("이부분이 어려울 수 있는데 천천히 한번 따라해봅시다.\n(1) 먼저 "),s("code",[e._v("Branch")]),e._v("를 해당 팀 "),s("code",[e._v("feature")]),e._v("로 변경해주세요!"),s("br"),e._v("\n(2) 그럼 주황색 창이 생성될거에요"),s("br"),e._v("\n(3) 오른쪽에 "),s("code",[e._v("Compare & pull request >")]),e._v("를 선택해보세요!")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(14).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[e._v("Pull Request를 Open할 수 있는 페이지로 이동됐어요."),s("br"),e._v("\n(1) 먼저 Merge를 요청할 "),s("code",[e._v("Base Branch")]),e._v("를 선택합니다!"),s("br"),e._v("\n(2) 그리고 어떤 내용으로 Merge를 요청하는지 제목에 적어줍니다."),s("br"),e._v("\n(3) 자세한 내용을 아래에 적고 "),s("code",[e._v("@")]),e._v(" 태그를 이용해서 "),s("code",[e._v("팀장")]),e._v("을 호출해주세요."),s("br"),e._v(" "),s("code",[e._v("Branch")]),e._v(" 변경과 "),s("code",[e._v("@")]),e._v(" 태그는 사진은 아래에 첨부할게요!")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(15).PNG",alt:"img"}}),s("br"),e._v(" "),s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(16).PNG",alt:"img"}})]),e._v(" "),s("p",[e._v("작성이 완료되었다면 우측 하단에 있는 "),s("code",[e._v("Create pull request")]),e._v(" 버튼을 누르세요.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(17).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[e._v("버튼을 누르면 다음과 같은 페이지로 이동합니다."),s("br"),e._v("\n지금 저희는 온라인 팀이니까 into "),s("code",[e._v("feature/online")]),e._v(" branch가 표시되고"),s("br"),e._v("\n여러분 이름으로 만든 branch 명(저는 `youngjun-park' branch)으로 부터(from) 표시가 됩니다."),s("br"),e._v("\n태그하셨는지 한번 더 확인해주세요!")])]),e._v(" "),s("p",[e._v("여기까지 해주시면 여러분께서 할 일은 끝낸겁니다!")]),e._v(" "),s("hr"),e._v(" "),s("h3",{attrs:{id:"팀장이-하는-일도-궁금하시면-참고하세요"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#팀장이-하는-일도-궁금하시면-참고하세요"}},[e._v("#")]),e._v(" 팀장이 하는 일도 궁금하시면 참고하세요!")]),e._v(" "),s("h4",{attrs:{id:"_5-팀장은-본인-팀의-풀리퀘를-차례차례-팀-브랜치로-merge-이하-머지-한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-팀장은-본인-팀의-풀리퀘를-차례차례-팀-브랜치로-merge-이하-머지-한다"}},[e._v("#")]),e._v(" 5. 팀장은 본인 팀의 풀리퀘를 차례차례 팀 브랜치로 merge(이하 머지)한다.")]),e._v(" "),s("p",[e._v("틀린 풀 리퀘가 있을경우 해당 풀 리퀘에서 코멘트를 통하여 소통/정정 한 후 맞는 풀 리퀘로 변경 요청 한 후 팀원의 변경의 변경이후 머지를 진행한다.")]),e._v(" "),s("h4",{attrs:{id:"_6-팀장은-팀원의-모든-풀리퀘를-머지한-이후-팀-브랜치에서-develop-브랜치로-풀-리퀘를-보낸다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-팀장은-팀원의-모든-풀리퀘를-머지한-이후-팀-브랜치에서-develop-브랜치로-풀-리퀘를-보낸다"}},[e._v("#")]),e._v(" 6. 팀장은 팀원의 모든 풀리퀘를 머지한 이후 팀 브랜치에서 develop 브랜치로 풀 리퀘를 보낸다.")]),e._v(" "),s("p",[e._v("6-1. 6의 풀 리퀘에 @lee-sj 를 호출하여서 알린다")]),e._v(" "),s("h4",{attrs:{id:"_7-lee-sj-는-develop로-들어온-풀-리퀘를-확인후-머지를-진행한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-lee-sj-는-develop로-들어온-풀-리퀘를-확인후-머지를-진행한다"}},[e._v("#")]),e._v(" 7. @lee-sj 는 develop로 들어온 풀 리퀘를 확인후 머지를 진행한다.")]),e._v(" "),s("h4",{attrs:{id:"_8-lee-sj-는-모든-변경사항이-develop-브랜치에-저장되었을-경우-master-브랜치로-push-한다"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-lee-sj-는-모든-변경사항이-develop-브랜치에-저장되었을-경우-master-브랜치로-push-한다"}},[e._v("#")]),e._v(" 8. @lee-sj 는 모든 변경사항이 develop 브랜치에 저장되었을 경우 master 브랜치로 push 한다.")]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(18).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[e._v("팀장은 "),s("code",[e._v("Files changed")]),e._v("탭을 누르면 여러분이 수정한 file 내용을 확인할 수 있어요.")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/github-pull-request(19).PNG",alt:"img"}})]),e._v(" "),s("blockquote",[s("p",[s("code",[e._v("Review changes")]),e._v(" 버튼을 누르면 수정한 내용에 대해 "),s("code",[e._v("Comment")]),e._v("를 작성할 수 있습니다!"),s("br"),e._v(" "),s("code",[e._v("Submit review")]),e._v(" 버튼을 누르면 Comment한 내용이 Pull request를 보낸 사람이 확인할 수 있어요.")])]),e._v(" "),s("p",[e._v("develop 브랜치로 Pull Request를 보내는 방법은 앞에서 여러분께서 Pull Request보낸 방법과 똑같아요!")])])}),[],!1,null,null,null);t.default=a.exports}}]);