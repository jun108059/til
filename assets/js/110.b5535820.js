(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{843:function(t,a,s){"use strict";s.r(a);var e=s(27),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"kafka-quick-start"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kafka-quick-start"}},[t._v("#")]),t._v(" Kafka Quick Start")]),t._v(" "),s("p",[t._v("실습 환경")]),t._v(" "),s("ul",[s("li",[t._v("💡 Java10 (Java 8이상 필수)")]),t._v(" "),s("li",[t._v("💡 Windows 10")]),t._v(" "),s("li",[t._v("💡 Git Bash")]),t._v(" "),s("li",[t._v("💡 Kafka 2.6.0")])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("앞서 간단한 properties 설정도 모두 살펴보았고 실행하는 방법도 알아보았다.")]),t._v(" "),s("p",[t._v("이제 "),s("a",{attrs:{href:"https://kafka.apache.org/quickstart",target:"_blank",rel:"noopener noreferrer"}},[t._v("APACHE KAFKA QUICKSTART 공식문서"),s("OutboundLink")],1),t._v("를 따라 Kafka 기능을 사용해보자.")]),t._v(" "),s("h2",{attrs:{id:"_1-빠르게-zookeeper-kafka-server-실행"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-빠르게-zookeeper-kafka-server-실행"}},[t._v("#")]),t._v(" 1. 빠르게 zookeeper, kafka server 실행")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yj_park@yjpark MINGW64 /c/dev/kafka_2.13-2.6.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# zookeeper 실행")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zookeeper"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bat config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zookeeper"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("properties\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# kafka server 실행")]),t._v("\n$ "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bin")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kafka"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bat config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("properties\n")])])]),s("h2",{attrs:{id:"_2-topic-생성하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-topic-생성하기"}},[t._v("#")]),t._v(" 2. Topic 생성하기")]),t._v(" "),s("p",[t._v("용어는 이전 포스팅에서 살펴보았으니 간단한 원리만 살펴보자.")]),t._v(" "),s("ul",[s("li",[t._v("Kafka는 이벤트(또는 메시지)를 읽고, 쓰고, 저장하고, 처리 할 수 있는 분산 이벤트 스트리밍 플랫폼")]),t._v(" "),s("li",[t._v("이벤트 예시(배송 주문, 센서, 결제  처리, App Push 알림, 메일 보내기 등)")]),t._v(" "),s("li",[t._v("이런 이벤트를 Topic 별로  구성 및 저장!")])]),t._v(" "),s("blockquote",[s("p",[t._v("간단한 Topic은 파일 시스템의 폴더, Event는 파일로 이해하면 편하다.\n그러니, Event(파일) 생성 전에 Topic(폴더)을 먼저 생성해보자.😊")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yj_park@yjpark MINGW64 /c/dev/kafka_2.13-2.6.0")]),t._v("\n$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-topics.bat --create --topic quickstart-events --bootstrap-server localhost:9092\n")])])]),s("ol",[s("li",[s("strong",[t._v("--create")]),t._v(" "),s("ul",[s("li",[t._v("새로운 토픽을 만들 때 사용하는 옵션")])])]),t._v(" "),s("li",[s("strong",[t._v("--topic")]),t._v(" "),s("ul",[s("li",[t._v("create, alter, describe, delete 옵션에 사용할 Topic 명")]),t._v(" "),s("li",[t._v('Topic 이름은 큰따옴표(")로 묶을 수 있고, 정규식 사용이 가능( \\로 escape)')])])]),t._v(" "),s("li",[s("strong",[t._v("--bootstrap-server")]),t._v(" "),s("ul",[s("li",[t._v("연결할 Kafka 서버( host:port )")]),t._v(" "),s("li",[t._v("이 옵션이 추가되면, 직접 Zookeeper에 연결하지 않아도 된다.")])])]),t._v(" "),s("li",[t._v("(추가옵션) -"),s("strong",[t._v("-replication-factor")]),t._v(" "),s("ul",[s("li",[t._v("Partition 복제 수")]),t._v(" "),s("li",[t._v("기본 값은 server.properties 파일에서 default.replication.factor 항목으로 설정 가능( 설정되어 있지 않을 경우, 추가 작성)")])])]),t._v(" "),s("li",[t._v("(추가옵션) "),s("strong",[t._v("--partitions")]),t._v(" "),s("ul",[s("li",[t._v("Topic이 생성되거나 변경될 때의 Partition 수")]),t._v(" "),s("li",[t._v("기본 값은 server.properties 파일에서 num.partitions 항목으로 설정 가능")])])])]),t._v(" "),s("h3",{attrs:{id:"_2-1-topic-생성-옵션-확인하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-topic-생성-옵션-확인하기"}},[t._v("#")]),t._v(" 2-1. Topic 생성 옵션 확인하기")]),t._v(" "),s("p",[s("code",[t._v("--help 옵션")])]),t._v(" "),s("p",[t._v("더 자세한 Topic 관련 옵션을 확인하려면 "),s("strong",[t._v("help 명령어")]),t._v("를 입력해보자.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# yj_park@yjpark MINGW64 /c/dev/kafka_2.13-2.6.0")]),t._v("\n$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-topics.bat --help\n")])])]),s("h3",{attrs:{id:"_2-2-현재-사용-정보-확인하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-현재-사용-정보-확인하기"}},[t._v("#")]),t._v(" 2-2. 현재 사용 정보 확인하기")]),t._v(" "),s("p",[s("code",[t._v("--describe 옵션")])]),t._v(" "),s("ul",[s("li",[t._v("새로운 Topic의 PartitionCount와 같은 세부 정보 표시하는 예시")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-topics.bat --describe --topic quickstart-events --bootstrap-server localhost:9092\nTopic:quickstart-events  PartitionCount:1    ReplicationFactor:1 Configs:\n    Topic: quickstart-events Partition: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    Leader: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("   Replicas: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" Isr: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-3-topic-목록-확인하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-topic-목록-확인하기"}},[t._v("#")]),t._v(" 2-3. Topic 목록 확인하기")]),t._v(" "),s("p",[s("code",[t._v("--list 옵션")])]),t._v(" "),s("ul",[s("li",[t._v("사용 가능한 Topic 목록을 확인할 수 있다.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-topics.bat --list --bootstrap-server localhost:9092\n")])])]),s("h3",{attrs:{id:"_2-4-topic-삭제하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-topic-삭제하기"}},[t._v("#")]),t._v(" 2-4. Topic 삭제하기")]),t._v(" "),s("p",[s("code",[t._v("--delete 옵션")])]),t._v(" "),s("ul",[s("li",[t._v("Topic을 삭제하려면 "),s("strong",[t._v("server.properties")]),t._v(" 파일에서 "),s("strong",[t._v("delete.topic.enable=true")]),t._v(" 설정을 추가해줘야 한다. (서버 재시작 필요)")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-topics.bat --delete --topic quickstart-events --bootstrap-server localhost:9092\n")])])]),s("h2",{attrs:{id:"_3-producer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-producer"}},[t._v("#")]),t._v(" 3. Producer")]),t._v(" "),s("h3",{attrs:{id:"_3-1-event-메시지-생성하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-event-메시지-생성하기"}},[t._v("#")]),t._v(" 3-1. Event(메시지) 생성하기")]),t._v(" "),s("p",[t._v("Topic을 생성했으니 Event를 만들어보자!")]),t._v(" "),s("ul",[s("li",[t._v("Kafka 클라이언트는 Event를 읽거나 쓸 때 네트워크를 통해 Kafka Broker와 통신한다.")]),t._v(" "),s("li",[t._v("Event가 수신되면 Broker는 Event를 저장")])]),t._v(" "),s("p",[t._v("Producer는 Kafka Queue에 정보를 저장해준다.\nMessage(= Event)를 만들어서 Topic으로 보내보자.")]),t._v(" "),s("blockquote",[s("p",[t._v("Broker는 Kafka 애플리케이션이 설치되어 있는 서버 또는 노드이다.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-console-producer.bat --topic quickstart-events --bootstrap-server localhost:9092 \n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" This is my first event\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" jun108059\n")])])]),s("ul",[s("li",[t._v("메시지 두개가 생성됐다.")]),t._v(" "),s("li",[t._v("종료하려면 "),s("strong",[t._v("ctrl + c")]),t._v(" 를 누르면 된다.")])]),t._v(" "),s("h3",{attrs:{id:"_3-2-producer-관련-옵션-한번에-보기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-producer-관련-옵션-한번에-보기"}},[t._v("#")]),t._v(" 3-2. Producer 관련 옵션 한번에 보기")]),t._v(" "),s("p",[s("code",[t._v("--help 옵션")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-console-producer.bat --help\n")])])]),s("h2",{attrs:{id:"_4-consumer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-consumer"}},[t._v("#")]),t._v(" 4. Consumer")]),t._v(" "),s("h3",{attrs:{id:"_4-1-event-메시지-읽기-소비하기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-event-메시지-읽기-소비하기"}},[t._v("#")]),t._v(" 4-1. Event(메시지) 읽기(소비하기)")]),t._v(" "),s("ul",[s("li",[t._v("생성된 메시지를 옵션을 통해 여러가지 방법으로 소비할 수 있다.")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-console-consumer.bat --topic quickstart-events --from-beginning --bootstrap-server localhost:9092 \nThis is my first event\njun108059\n")])])]),s("p",[s("code",[t._v("--from-beginning 옵션")])]),t._v(" "),s("ul",[s("li",[t._v("Consumer에게 설정된 offset이 없으므로 가장 최신의 메시지 대신 가장 먼저 도착한 메시지부터 읽도록 하는 옵션")])]),t._v(" "),s("h3",{attrs:{id:"_4-2-consumer-관련-옵션-한번에-보기"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-consumer-관련-옵션-한번에-보기"}},[t._v("#")]),t._v(" 4-2. Consumer 관련 옵션 한번에 보기")]),t._v(" "),s("p",[s("code",[t._v("--help 옵션")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("$ ."),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("bin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("windows"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("kafka-console-consumer.bat --help\n")])])]),s("p",[t._v("Kafka에서 간단하게 Topic을 만들고 Event를 생성하고 소비해보았다.")]),t._v(" "),s("p",[t._v("이제 Spring boot에 연동해서 Kafka를 사용하는 포스팅을 할 예정이다.")]),t._v(" "),s("p",[s("strong",[t._v("Reference")])]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://kafka.apache.org/quickstart",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kafka.apache.org/quickstart"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://kafka.apache.org/documentation/#configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kafka.apache.org/documentation/#configuration"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://victorydntmd.tistory.com/345",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://victorydntmd.tistory.com/345"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);