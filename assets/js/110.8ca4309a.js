(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{849:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-이미지-만들고-배포하기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-이미지-만들고-배포하기"}},[s._v("#")]),s._v(" Docker 이미지 만들고 배포하기")]),s._v(" "),a("h2",{attrs:{id:"도커-이미지-만들기"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#도커-이미지-만들기"}},[s._v("#")]),s._v(" 도커 이미지 만들기")]),s._v(" "),a("p",[s._v("도커는 이미지를 만들기 위해 컨테이너의 상태를 그대로 이미지로 저장하는 단순하고 무식한 방법을 사용합니다.")]),s._v(" "),a("p",[s._v("예를 들어, 어떤 애플리케이션을 이미지로 만든다면 리눅스만 설치된 컨테이너에 애플리케이션을 설치하고 그 상태를 그대로 이미지로 저장합니다. 가상머신의 스냅샷과 비슷한 방식입니다.")]),s._v(" "),a("p",[s._v("이런 과정은 콘솔에서 명령어를 직접 입력하는 것과 별 차이가 없으므로 쉘 스크립트를 잘 알아야 하지만 좋은 샘플이 많이 공개되어 있어 잘 몰라도 크게 걱정하지 않아도 됩니다. 또한 컨테이너의 가벼운 특성과 레이어 개념을 이용하여 생성과 테스트를 빠르게 수행할 수 있습니다.")]),s._v(" "),a("p",[s._v("이제 Ruby로 만들어진 간단한 웹 애플리케이션을 도커라이징Dockerizing(=도커 이미지를 만듦)해보겠습니다.")]),s._v(" "),a("h2",{attrs:{id:"sinatra-웹-애플리케이션-샘플"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sinatra-웹-애플리케이션-샘플"}},[s._v("#")]),s._v(" Sinatra 웹 애플리케이션 샘플")]),s._v(" "),a("p",[s._v("일단 웹 애플리케이션 소스코드를 작성해야겠죠. Sinatra라는 가벼운 웹 프레임워크를 사용하기 위해 새로운 폴더를 만들고 Gemfile과 app.rb를 만듭니다.")]),s._v(" "),a("p",[s._v("Gemfile")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("source "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://rubygems.org'")]),s._v("\ngem "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sinatra'")]),s._v("\n")])])]),a("p",[s._v("app.rb")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sinatra'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("require")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'socket'")]),s._v("\n\nget "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Socket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("gethostname\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])])]),a("p",[s._v("ruby와 sinatra에 대해 전혀 모르더라도 Gemfile은 패키지를 관리하고 app.rb는 호스트명을 출력하는 웹 서버를 만들었다는 걸 예상할 수 있습니다.")]),s._v(" "),a("p",[s._v("이제 패키지를 설치하고 서버를 실행해보겠습니다.")]),s._v(" "),a("div",{staticClass:"language-ruby extra-class"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[s._v("bundle install            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# install package")]),s._v("\nbundle exec ruby app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rb   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Run sinatra")]),s._v("\n")])])]),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("~/Workspace/project/github.com/subicura/sinatra                                 \n❯ bundle "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("                                                                \nUsing rack "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.6")]),s._v(".4                                                                \nUsing tilt "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v(".6                                                                \nUsing bundler "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.14")]),s._v(".3                                                            \nUsing rack-protection "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.5")]),s._v(".3                                                     \nUsing sinatra "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.4")]),s._v(".7                                                             \nBundle complete"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" Gemfile dependency, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" gems now installed.                    \nUse "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("bundle show "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("gemname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" to see where a bundled gem is installed.            \n")])])]),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("~/Workspace/project/github.com/subicura/sinatra                                 \n❯ bundle "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ruby app.rb                                                       \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("-01-12 02:43:13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" INFO  WEBrick "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.3")]),s._v(".1                                       \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("-01-12 02:43:13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" INFO  ruby "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.3")]),s._v(".0 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2015")]),s._v("-12-25"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("x86_64-darwin15"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("           \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" Sinatra "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v1.4.7"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" has taken the stage on "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4567")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" development with backup from\n WEBrick                                                                        \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("-01-12 02:43:13"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" INFO  WEBrick::HTTPServer"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#start: pid=1593 port=4567  ")]),s._v("\n::1 - - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("01/Sat/2019:02:43:20 +0900"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET / HTTP/1.1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0036")]),s._v("             \n::1 - - "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("01/Sat/2019:02:43:20 KST"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GET / HTTP/1.1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("                      \n- -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /                                                                          \n^C"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" Sinatra has ended his "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("crowd applauds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                 \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("-01-12 02:43:23"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" INFO  going to "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".                               \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2019")]),s._v("-01-12 02:43:23"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" INFO  WEBrick::HTTPServer"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#start done. ")]),s._v("\n")])])]),a("p",[s._v("run-sinatra\nruby가 설치되어 있지 않다고요? 도커만 있으면 문제없습니다. 다음 명령어를 실행합니다.")]),s._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("docker run --rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4567")]),s._v(":4567 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v(":/usr/src/app "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-w /usr/src/app "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nruby "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nshell script -c "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bundle install && bundle exec ruby app.rb -o 0.0.0.0"')]),s._v("\n                                                                                \n~/Workspace/project/github.com/subicura/sinatra                                 \n❯ docker run --rm "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("                                                             \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4567")]),s._v(":4567 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("                                                                \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -v "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$PWD")]),s._v(":/usr/src/app "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("                                                        \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -w /usr/                                 \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])]),a("p",[s._v("호스트의 디렉토리를 루비가 설치된 컨테이너의 디렉토리에 마운트한다음 그대로 명령어를 실행하면 로컬에 개발 환경을 구축하지 않고 도커 컨테이너를 개발환경으로 사용할 수 있습니다.")]),s._v(" "),a("p",[s._v("도커를 개발환경으로 사용하면 개발=테스트=운영이 동일한 환경에서 실행되는 놀라운 상황이 펼쳐집니다. 이 부분은 재미있는 내용이 많지만, 주제에서 벗어나므로 이 정도만 언급하고 다음 기회에 더 자세히 알아봅니다.")]),s._v(" "),a("p",[s._v("서버가 정상적으로 실행됐으면 웹 브라우저에서 테스트해봅니다. "),a("code",[s._v("http://localhost:4567")])]),s._v(" "),a("p",[s._v("도커 컨테이너의 호스트명이 보입니다. 소스는 잘 작성한 것 같네요! 이제 도커 이미지를 만들 준비가 완료됐습니다.")]),s._v(" "),a("h2",{attrs:{id:"ruby-application-dockerfile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ruby-application-dockerfile"}},[s._v("#")]),s._v(" Ruby Application Dockerfile")]),s._v(" "),a("p",[s._v("도커는 이미지를 만들기 위해 Dockerfile이라는 이미지 빌드용 DSLDomain Specific Language 파일을 사용합니다. 단순 텍스트 파일로 일반적으로 소스와 함께 관리합니다.")]),s._v(" "),a("p",[s._v("고급 개발자는 바로 Dockerfile을 만들 수도 있겠지만, 일반 개발자들은 일단 리눅스 서버에서 테스트로 설치해보고 안 되면 될 때까지 삽질하면서 최적의 과정을 Dockerfile로 작성해야 합니다. 우리는 초보니까 Ruby 웹 애플리케이션을 ubuntu에 배포하는 과정을 먼저 살펴보겠습니다.")]),s._v(" "),a("p",[s._v("순서")]),s._v(" "),a("ol",[a("li",[s._v("ubuntu 설치")]),s._v(" "),a("li",[s._v("ruby 설치")]),s._v(" "),a("li",[s._v("소스 복사")]),s._v(" "),a("li",[s._v("Gem 패키지 설치")]),s._v(" "),a("li",[s._v("Sinatra 서버 실행")])]),s._v(" "),a("p",[s._v("이 과정을 그대로 쉘 스크립트로 옮겨봅니다.")]),s._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. ubuntu 설치 (패키지 업데이트)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" update\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. ruby 설치")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ruby\ngem "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" bundler\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 소스 복사")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /usr/src/app\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("scp")]),s._v(" Gemfile app.rb root@ubuntu:/usr/src/app  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# From host")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. Gem 패키지 설치")]),s._v("\nbundle "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5. Sinatra 서버 실행")]),s._v("\nbundle "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ruby app.rb\n")])])]),a("p",[s._v("ubuntu 컨테이너를 실행하고 위 명령어를 그대로 실행하면 웹 서버를 실행할 수 있습니다. 리눅스에서 테스트가 끝났으니 이 과정을 Dockerfile로 만들면 됩니다. 아직 자세한 명령어를 배우진 않았지만 일단 만들어 봅니다. 핵심 명령어는 파일을 복사하는 "),a("code",[s._v("COPY")]),s._v("와 명령어를 실행하는 "),a("code",[s._v("RUN")]),s._v("입니다.")]),s._v(" "),a("div",{staticClass:"language-shell script extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. ubuntu 설치 (패키지 업데이트 + 만든사람 표시)")]),s._v("\nFROM       ubuntu:16.04\nMAINTAINER subicura@subicura.com\nRUN        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -y update\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. ruby 설치")]),s._v("\nRUN "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" -y "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ruby\nRUN gem "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" bundler\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. 소스 복사")]),s._v("\nCOPY "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /usr/src/app\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4. Gem 패키지 설치 (실행 디렉토리 설정)")]),s._v("\nWORKDIR /usr/src/app\nRUN     bundle "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 5. Sinatra 서버 실행 (Listen 포트 정의)")]),s._v("\nEXPOSE "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4567")]),s._v("\nCMD    bundle "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" ruby app.rb -o "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0\n")])])]),a("p",[s._v("쉘 스크립트의 내용을 거의 그대로 Dockerfile로 옮겼습니다. 차이점은 도커 빌드 중엔 키보드를 입력할 수 없기 때문에 (y/n)을 물어보는 걸 방지하기 위해 -y 옵션을 추가한 것 정도입니다.")]),s._v(" "),a("p",[s._v("빌드 파일을 작성했으니 이제 이미지를 만들어 봅니다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);