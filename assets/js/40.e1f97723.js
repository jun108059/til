(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{452:function(v,_,t){"use strict";t.r(_);var i=t(27),s=Object(i.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(1).png",alt:"img"}}),t("br")]),t("p"),v._v(" "),t("blockquote",{staticStyle:{"font-size":"1.12em"},attrs:{"data-ke-style":"style3"}},[t("b",[v._v("Git 기초 공부하기 목차"),t("br")]),t("a",{attrs:{href:"https://dev-youngjun.tistory.com/7"}},[v._v("(1) 2020/02/29 - [Git] - Visual Studio Code에 Github 연동하기")]),t("br"),t("a",{attrs:{href:"https://dev-youngjun.tistory.com/43",target:"_blank",rel:"noopener"}},[v._v("(2) 2020/04/16 - [Git] - Git 이란?")]),t("br"),t("b",[v._v("(3) 2020/04/17 - [Git] - Git 설치 및 커멘드 사용법")]),t("br"),t("a",{attrs:{href:"https://dev-youngjun.tistory.com/45"}},[v._v("(4) 2020/04/18 - [Git] - Git Branch 사용하기")]),t("br"),t("a",{attrs:{href:"https://dev-youngjun.tistory.com/46"}},[v._v("(5) 2020/04/19 - [Git] - Git remote 원격 저장소와 Github")]),t("br"),t("a",{attrs:{href:"https://dev-youngjun.tistory.com/47"}},[v._v("(6) 2020/04/20 - [Git] - Git - Pull Request 활용하기")])]),v._v(" "),t("p"),v._v(" "),t("p",[t("b",[v._v("1."),t("span"),t("span",[v._v("Git 설치")])])]),v._v(" "),t("p",[v._v("대부분의 Linux 또는 macOS 환경에서는 이미 Git이 설치되어 있습니다.")]),v._v(" "),t("p",[v._v("아래의 순서를 참고하여 Git을 설치하고 실행해봅시다. "),t("br"),t("br")]),v._v(" "),t("p",[v._v("1. Git 설치여부 확인")]),v._v(" "),t("p",[v._v("Git 설치 전 자신의 PC에 이미 설치되어 있는지 확인해봅시다.")]),v._v(" "),t("p",[t("b",[v._v("[Windows]")])]),v._v(" "),t("ol",[t("li",[t("b",[v._v("Windows + r")]),v._v(" 단축키를 입력하여 실행 창을 띄웁니다.")]),v._v(" "),t("li",[t("b",[v._v("cmd")]),v._v(" 입력 후 "),t("b",[v._v("Enter")])]),v._v(" "),t("li",[t("b",[v._v("git")]),v._v(" 입력 후 "),t("b",[v._v("Enter")])])]),v._v(" "),t("p",[t("b",[v._v("[macOS]")])]),v._v(" "),t("ol",[t("li",[v._v("Finder → 응용 프로그램 → 유틸리티로 이동하여 "),t("b",[v._v("터미널")]),t("b",[v._v(".app")]),v._v(" 을 실행합니다.")]),v._v(" "),t("li",[t("b",[v._v("git")]),v._v("입력 후 "),t("b",[v._v("Enter")])])]),t("p"),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(2).png",alt:"img"}})]),v._v(" "),t("p",[v._v("위와 같이 실행되지 않는다면 다음 단계에서 Git을 설치해주세요. "),t("br"),t("br")]),v._v(" "),t("p",[v._v("2. Git 설치")]),v._v(" "),t("p",[v._v("아래의 링크에 접속 후 본인의 PC 환경에 맞는 설치 파일을 다운로드 합니다.")]),v._v(" "),t("p",[t("a",{attrs:{href:"https://git-scm.com/downloads"}},[v._v("Git 설치 링크")])]),v._v(" "),t("p",[v._v("다운로드 된 설치 파일을 실행하여 Git 설치를 완료합니다.")]),v._v(" "),t("p",[v._v("macOS에서는 Git이 설치되어있지 않다면 최초 명령어 실행 시 뜨는 대화상자에서 설치 버튼을 눌러 Git을 설치할 수 있습니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(3).png",alt:"img"}})]),v._v(" "),t("p",[v._v("3.Git 실행 준비")]),v._v(" "),t("p",[t("b",[v._v("[Windows]")])]),v._v(" "),t("p",[v._v("시작 메뉴 → Git 폴더로 이동하여 "),t("b",[v._v("Git Bash")]),v._v(" 실행")]),v._v(" "),t("p",[t("b",[v._v("[macOS]")])]),v._v(" "),t("p",[v._v("Finder → 응용 프로그램 → 유틸리티로 이동하여 "),t("b",[v._v("터미널")]),t("b",[v._v(".app")]),v._v(" 을 실행 "),t("br"),t("br")]),v._v(" "),t("p",[v._v("4.Git 설치 확인")]),v._v(" "),t("p",[v._v("Git이 정상적으로 설치되었나요?")]),v._v(" "),t("p",[v._v("아래의 명령어를 입력하여 Git 버전을 확인해보세요.")]),v._v(" "),t("p",[t("b",[v._v("git –version")])]),v._v(" "),t("p",[v._v("정확한 버전은 아래와 달라도 상관없습니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(4).png",alt:"img"}})]),v._v(" "),t("p",[t("b",[v._v("2. Git"),t("span",[v._v(" ")])]),t("b",[v._v("초기")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("설정")])]),v._v(" "),t("p",[v._v("Git을 PC에 설치했습니다. 이제 본격적으로 진행하기 전 설정해야하는 작업이 있습니다. "),t("br"),t("br")]),v._v(" "),t("h3",[v._v("1. 사용자 정보 설정")]),v._v(" "),t("p",[v._v("저장소에 코드를 반영할 때 등록될 사용자 정보를 설정합니다.")]),v._v(" "),t("p",[v._v("이름: "),t("b",[v._v('git config --global user.name "<')]),t("b",[v._v("이름")]),t("b",[v._v('>"')])]),v._v(" "),t("p",[v._v("이메일: "),t("b",[v._v('git config --global user.email "<')]),t("b",[v._v("이메일")]),t("b",[v._v('>"')])]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(5).png",alt:"img"}})]),v._v(" "),t("p",[v._v("프로젝트 마다 다른 사용자 정보를 지정하고 싶으면 해당 프로젝트 폴더에서 "),t("b",[v._v("--global")]),v._v(" 옵션을 빼고 실행해주세요.")]),v._v(" "),t("h3",[v._v("2.설정 정보 확인")]),v._v(" "),t("p",[v._v("아래의 명령을 실행하여 앞에서 설정한 내용을 확인해보세요.")]),v._v(" "),t("p",[t("b",[v._v("git config --list")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(6).png",alt:"img"}})]),v._v(" "),t("p",[t("b",[v._v("3. Git"),t("span",[v._v(" ")])]),t("b",[v._v("저장소")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("생성")])]),v._v(" "),t("p",[v._v("Git 저장소를 생성하는 방법에는 크게 두 가지가 있습니다.")]),v._v(" "),t("p",[v._v("기존에 작업중인 디렉토리를 사용하거나(또는 새로운 디렉토리에서 시작할 때) 다른 저장소를 복제(Clone)하는 경우입니다. "),t("br"),t("br")]),v._v(" "),t("h3",[v._v("1. 기존 디렉토리 사용")]),v._v(" "),t("p",[v._v("Git을 사용할 프로젝트 디렉토리로 이동 후 "),t("b",[v._v("git init")]),v._v(" 명령어를 실행해주세요.")]),v._v(" "),t("p",[v._v("프로젝트 디렉토리에 "),t("b",[v._v(".git"),t("span",[v._v(" ")])]),t("b",[v._v("디렉토리")]),v._v("가 생성되며 저장소 생성이 완료되었습니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(7).png",alt:"img"}})]),v._v(" "),t("h3",[v._v("2. 저장소 복제(Clone) 사용")]),v._v(" "),t("p",[v._v("작업을 진행할 디렉토리에서 "),t("b",[v._v("git clone <")]),t("b",[v._v("저장소")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("주소")]),t("b",[v._v(">")]),v._v(" 명령어를 실행해주세요.")]),v._v(" "),t("p",[v._v("저장소에 있는 모든 데이터가 다운로드되며 저장소 복제가 완료됩니다.")]),v._v("\n![img](/docs/.vuepress/public/images/img-git/git2(8).png)  \n"),t("p",[v._v("저장소에 있는 모든 데이터를 복사해 가져오기 때문에 복제된 저장소가 망가져도 걱정하지 않으셔도 됩니다.")]),v._v(" "),t("p",[v._v("Git Lap과 같은 서비스를 복사해서 만드는 경우 vs 내 컴퓨터에 저장소를 만드는 경우")]),v._v(" "),t("p",[v._v("git init으로 새로운 git 저장소를 생성 -> gitLab 접속!")]),v._v(" "),t("p",[v._v("new project를 하나 생성합니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(9).png",alt:"img"}})]),v._v(" "),t("p",[v._v("이 gitLab을 Clone 할 폴더를 생성해줍니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(10).png",alt:"img"}})]),v._v(" "),t("p",[v._v("text 파일을 하나 만들고 수정해서 저장하면")]),v._v(" "),t("p",[v._v("이 파일은 Working Directory에만 저장되어 있는 상태입니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(11).png",alt:"img"}})]),v._v(" "),t("p",[v._v("Working Directory 에서 Staging Area로 넣는 방법"),t("br"),v._v("‘git add’ 명령어를 통해 가능합니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(12).png",alt:"img"}})]),v._v(" "),t("p",[v._v("git add를 통해 변화된 상태를 git stauts로 확인해보면 아래와 같습니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(13).png",alt:"img"}})]),v._v(" "),t("p",[v._v("이제 Staging Area로 파일이 반영된 상태입니다.")]),v._v(" "),t("p",[v._v("Staging Area에서 제거하고 싶을 때는 git reset 명령어를 통해 가능합니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(14).png",alt:"img"}})]),v._v(" "),t("p",[v._v("다시 추가해서 집어넣을 때 모든 파일을 Staging Area로 올리는"),t("br"),v._v("add “.”을 쓰면 됩니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(15).png",alt:"img"}})]),v._v(" "),t("p",[t("b",[v._v("Staging Area")])]),v._v(" "),t("blockquote",[t("p",[v._v("working directory랑 물리적으로 구분되는 공간이 아니고 같은 공간에"),t("br"),v._v("논리적인 구분이라고 생각해야 함!"),t("br"),v._v(".git으로 들어가면 완전히 다른 공간으로 들어가는 것")])]),v._v(" "),t("p",[v._v("git log 명령어를 통해 commit 내용 확인 가능합니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(16).png",alt:"img"}})]),v._v(" "),t("p",[t("b",[v._v("4. Git"),t("span",[v._v(" ")])]),t("b",[v._v("파일")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("생성과")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("저장소")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("반영")]),t("b",[t("span",[v._v(" ")]),v._v("I")])]),v._v(" "),t("p",[v._v("Git 설치와 설정까지 모두 완료했습니다. 본격적으로 Git을 활용하여 프로젝트를 진행해 보겠습니다. "),t("br"),t("br")]),v._v(" "),t("h3",[v._v("1. 새로운 파일 준비 영역으로 옮기기")]),v._v(" "),t("table",{staticStyle:{"border-collapse":"collapse",width:"100%"},attrs:{border:"1"}},[t("tbody",[t("tr",[t("td",[t("p",[v._v("1")]),v._v(" "),t("p",[v._v("2")])]),v._v(" "),t("td",[t("p",[v._v("// comment.js")]),v._v(" "),t("p",[v._v('alert("Hello world!");')])])])])]),v._v(" "),t("p",[v._v("새로운 "),t("b",[v._v("comment.js")]),v._v("파일을 작성하고 저장하였습니다. 이 파일을 Git에 저장소에 반영할 수 있을까요?")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(17).png",alt:"img"}})]),v._v(" "),t("p",[v._v("앞장에서 배운대로 Git은 "),t("b",[v._v("작업")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("디렉토리")]),v._v(", "),t("b",[v._v("준비")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("영역")]),v._v(", "),t("b",[v._v(".git"),t("span",[v._v(" ")])]),t("b",[v._v("디렉토리")]),v._v("의 세 가지 영역에서 파일을 관리합니다. 방금 만든 따끈따끈한 "),t("b",[v._v("comment.js")]),v._v("파일은 "),t("b",[v._v("작업")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("디렉토리")]),v._v(" 영역에 위치하고 있습니다. Git 저장소에 반영하려면 이 파일을 "),t("b",[v._v("준비")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("영역")]),v._v("으로 옮겨야 합니다.")]),v._v(" "),t("p",[t("b",[v._v("git add <")]),t("b",[v._v("파일명")]),t("b",[v._v(">")]),v._v(" 명령어를 사용하여 "),t("b",[v._v("준비")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("영역")]),v._v("으로 옮길 수 있습니다.")]),v._v(" "),t("p",[t("b",[v._v("comment.js")]),v._v("파일을 "),t("b",[v._v("준비")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("영역")]),v._v("으로 옮겨보겠습니다.")]),v._v(" "),t("p",[t("b",[v._v("git add comment.js")])]),v._v(" "),t("p",[v._v("저장소에 반영 전 "),t("b",[v._v("user.js")]),v._v(" 파일도 "),t("b",[v._v("준비")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("영역")]),v._v("으로 옮기고 싶어졌습니다. 그럴 땐 계속해서 동일한 명령어로 계속할 수 있습니다.")]),v._v(" "),t("p",[t("b",[v._v("git add user.js")])]),v._v(" "),t("p",[v._v("만약 옮겨야하는 파일이 많을 때는 어떻게 할까요? 모든 파일을 일일이 적어줘야 할까요?")]),v._v(" "),t("p",[v._v("아래의 명령어로 추가된/수정된 모든 파일을 처리할 수 있습니다.")]),v._v(" "),t("p",[t("b",[v._v("git add .")])]),v._v(" "),t("h3",[v._v("2. 준비 영역으로 옮긴 파일 취소하기")]),v._v(" "),t("p",[v._v("한 번에 여러 파일들을 수정했지만, 히스토리 관리 또는 수정한 내용의 명확성 때문에 저장소 반영(Commit)을 나누어서 해야할 경우가 있습니다. 이 때는 "),t("b",[v._v("git reset <")]),t("b",[v._v("파일명")]),t("b",[v._v(">")]),v._v(" 명령어로 해결할 수 있습니다.")]),v._v(" "),t("p",[t("b",[v._v("git reset user.js")])]),v._v(" "),t("p",[t("b",[v._v("user.js")]),v._v(" 파일이 취소되었습니다.")]),v._v(" "),t("h3",[v._v("3. 현재 상태 확인하기")]),v._v(" "),t("p",[v._v("현재 작업중인 프로젝트 파일들의 상태가 어떤지 확인할 수 있는 명령어 입니다.")]),v._v(" "),t("p",[t("b",[v._v("git status")])]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(18).png",alt:"img"}})]),v._v(" "),t("p",[t("b",[v._v("4. Git"),t("span",[v._v(" ")])]),t("b",[v._v("파일")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("생성과")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("저장소")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("반영")]),t("b",[t("span",[v._v(" ")]),v._v("II")])]),v._v(" "),t("p",[v._v("Git 설치와 설정까지 모두 완료했습니다. 본격적으로 Git을 활용하여 프로젝트를 진행해 보겠습니다. "),t("br"),t("br")]),v._v(" "),t("h3",[v._v("4. 저장소 반영하기")]),v._v(" "),t("p",[t("b",[v._v("준비")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("영역")]),v._v("으로 옮긴 "),t("b",[v._v("comment.js")]),v._v(" 파일과 "),t("b",[v._v("user.js")]),v._v("파일을 저장소에 반영해보겠습니다. 저장소 반영은 "),t("b",[v._v('git commit -m "<')]),t("b",[v._v("메모")]),t("b",[v._v('>"')]),v._v(" 명령어로 할 수 있습니다.")]),v._v(" "),t("p",[t("b",[v._v('git commit -m "Initial commit"')])]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(19).png",alt:"img"}})]),v._v(" "),t("p",[v._v("저장소에 파일이 반영되었습니다.")]),v._v(" "),t("h3",[v._v("5. 저장소 반영 메모 변경하기")]),v._v(" "),t("p",[v._v("저장소에 반영할 당시에 남긴 메모에 오타가 있거나, 잘못된 내용을 남겨 변경하고 싶을 때가 있습니다. 이러한 경우에는 "),t("b",[v._v("git commit --amend")]),v._v(" 명령어로 메모를 변경할 수 있습니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(20).png",alt:"img"}})]),v._v(" "),t("p",[v._v("앞으로 사용할 에디터를 변경하고 싶을 때는 "),t("b",[v._v("git config --global core.editor <")]),t("b",[v._v("에디터")]),t("b",[t("span",[v._v(" ")])]),t("b",[v._v("경로")]),t("b",[v._v(">")]),v._v(" 명령어를 사용하여 변경할 수 있습니다.")]),v._v(" "),t("p",[t("b",[v._v("[")]),t("b",[v._v("예시")]),t("b",[v._v("]")])]),v._v(" "),t("p",[t("b",[v._v("git config --global core.editor C:\\Program Files\\Notepad++\\notepad++.exe")])]),v._v(" "),t("h3",[v._v("6. 저장소 반영 내역 확인하기")]),v._v(" "),t("p",[v._v("저장소에 반영했던 내역을 보고 싶을 땐 "),t("b",[v._v("git log")]),v._v(" 명령어로 확인할 수 있습니다.")]),v._v(" "),t("p",[t("img",{attrs:{src:"/docs/.vuepress/public/images/img-git/git2(21).png",alt:"img"}})])])}),[],!1,null,null,null);_.default=s.exports}}]);