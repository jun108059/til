(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{695:function(t,_,v){"use strict";v.r(_);var a=v(27),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"객체지향의-개념"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#객체지향의-개념"}},[t._v("#")]),t._v(" 객체지향의 개념")]),t._v(" "),v("h2",{attrs:{id:"_1-객체지향-object-orientation"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-객체지향-object-orientation"}},[t._v("#")]),t._v(" 1. 객체지향(Object-Orientation)")]),t._v(" "),v("h3",{attrs:{id:"⏹-객체지향이-뭔데"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-객체지향이-뭔데"}},[t._v("#")]),t._v(" ⏹ 객체지향이 뭔데?")]),t._v(" "),v("ul",[v("li",[t._v("시스템 모델링의 기술\n"),v("ul",[v("li",[t._v("여러 객체가 서로 상호 작용하는 시스템")])])]),t._v(" "),v("li",[t._v("객체지향 모델은 객체끼리 interaction 한다.")])]),t._v(" "),v("blockquote",[v("p",[t._v("💡 Key Word"),v("br"),t._v("\nSystem, Model, Interaction, objects")])]),t._v(" "),v("ul",[v("li",[t._v("절차지향이 아닌 객체를 중심으로 문제를 해결하면 더 좋음")]),t._v(" "),v("li",[t._v("그래서 C++, C#도 생김")]),t._v(" "),v("li",[t._v("시스템 : 해결해야할 문제에 대한 포괄적인 개념!")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"_2-모델-model-이란"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-모델-model-이란"}},[t._v("#")]),t._v(" 2. 모델(Model)이란")]),t._v(" "),v("ul",[v("li",[t._v("어떤 것에 대한 추상적인 개념!")]),t._v(" "),v("li",[t._v("무엇을 개발하기 전에 그 무엇에 대해 이해할 수 있는 것이 목적\n"),v("ul",[v("li",[t._v("가상일 수 있고 물리적일 수 있음!")])])])]),t._v(" "),v("h3",{attrs:{id:"⏹-예를-들면"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-예를-들면"}},[t._v("#")]),t._v(" ⏹ 예를 들면")]),t._v(" "),v("ul",[v("li",[t._v("모델 : 사람 → 객체(Object) : 영준")]),t._v(" "),v("li",[t._v("모델 : Car → 객체(Object) : 마세라티")]),t._v(" "),v("li",[t._v("두 Object는 **상호작용(interaction)**할 수 있다.\n"),v("ul",[v("li",[t._v("영준이가 차를 탄다.")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("💡 객체 지향 모델링은 사람이 생각하는 방식과 유사하다!")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"_3-객체지향의-장점"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-객체지향의-장점"}},[t._v("#")]),t._v(" 3. 객체지향의 장점")]),t._v(" "),v("h3",{attrs:{id:"⏹-객체지향-장점은"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-객체지향-장점은"}},[t._v("#")]),t._v(" ⏹ 객체지향 장점은?")]),t._v(" "),v("ul",[v("li",[t._v("사람의 생각과 같은 현실에 매핑 됨")]),t._v(" "),v("li",[t._v("객체 지향 방식으로 생각하면 쉽게 문제를 해결할 수 있음")]),t._v(" "),v("li",[t._v("그래서!\n"),v("ul",[v("li",[t._v("개발하기 쉽고")]),t._v(" "),v("li",[t._v("이해하기 쉽다")])])])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"_4-객체-object-란"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-객체-object-란"}},[t._v("#")]),t._v(" 4. 객체(Object)란")]),t._v(" "),v("h3",{attrs:{id:"⏹-객체라는건-정확히-뭔데"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-객체라는건-정확히-뭔데"}},[t._v("#")]),t._v(" ⏹ 객체라는건 정확히 뭔데?")]),t._v(" "),v("p",[t._v("2가지 형태로 Object가 존재한다.")]),t._v(" "),v("ul",[v("li",[t._v("물리적인 유형\n"),v("ul",[v("li",[t._v("사람, 자동차 등")])])]),t._v(" "),v("li",[t._v("비물리적인 유형\n"),v("ul",[v("li",[t._v("시간, 날짜 등")])])])]),t._v(" "),v("h3",{attrs:{id:"⏹-어떻게-구성되어있어"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-어떻게-구성되어있어"}},[t._v("#")]),t._v(" ⏹ 어떻게 구성되어있어?")]),t._v(" "),v("p",[t._v("3가지 기본 구성이 있음")]),t._v(" "),v("ul",[v("li",[t._v("상태 (State) - Attributes - "),v("code",[t._v("변수")])]),t._v(" "),v("li",[t._v("행동 (behaviour) - Operations - "),v("code",[t._v("함수")])]),t._v(" "),v("li",[t._v("유일한 정체성 (Unique Identity)")])]),t._v(" "),v("blockquote",[v("p",[t._v("💡 Example"),v("br"),t._v("\nState(Attributes) : Name, Age"),v("br"),t._v("\nbehaviour(Operations) : Walks, Eats"),v("br"),t._v("\nIdentity : 주민번호")])]),t._v(" "),v("hr"),t._v(" "),v("h2",{attrs:{id:"_5-정보-은닉-information-hiding"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-정보-은닉-information-hiding"}},[t._v("#")]),t._v(" 5. 정보 은닉(Information Hiding)")]),t._v(" "),v("h3",{attrs:{id:"⏹-정보-은닉"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-정보-은닉"}},[t._v("#")]),t._v(" ⏹ 정보 은닉")]),t._v(" "),v("ul",[v("li",[t._v("Information is stored within the object\n"),v("ul",[v("li",[t._v("객체 내부에 정보가 저장된다.")])])]),t._v(" "),v("li",[t._v("It is hidden from the outside world\n"),v("ul",[v("li",[t._v("외부로부터 숨겨짐")])])]),t._v(" "),v("li",[t._v("It can only be manipulated by the object itself\n"),v("ul",[v("li",[t._v("입력과 출력에 대해 객체 자체에서 조작할 수 있음")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("💡 구현의 세부 사항을 몰라도 된다는 의미다"),v("br"),t._v("\n이는 큰 프로젝트에서 협업할 때 엄청 중요한 설계임!"),v("br"),t._v("\nex) REST API")])]),t._v(" "),v("h3",{attrs:{id:"⏹-getter와-setter"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-getter와-setter"}},[t._v("#")]),t._v(" ⏹ Getter와 Setter")]),t._v(" "),v("ul",[v("li",[t._v("직접적으로 접근할 수 없고 get, set을 사용해야함")])]),t._v(" "),v("h3",{attrs:{id:"⏹-정보-은닉의-장점"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-정보-은닉의-장점"}},[t._v("#")]),t._v(" ⏹ 정보 은닉의 장점!")]),t._v(" "),v("ul",[v("li",[t._v("Simplifies the model by hiding implementation details")]),t._v(" "),v("li",[t._v("구현 세부 정보를 숨겨 모델을 단순화한다.")]),t._v(" "),v("li",[t._v("It is a barrier against change propagation.")]),t._v(" "),v("li",[t._v("공개할 정보와 숨길 정보를 나눠준다.")])]),t._v(" "),v("p",[t._v("--")]),t._v(" "),v("h2",{attrs:{id:"_6-캡슐화-encapsulation"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-캡슐화-encapsulation"}},[t._v("#")]),t._v(" 6. 캡슐화(Encapsulation)")]),t._v(" "),v("p",[t._v("정보은닉과 캡슐화의 차이를 정확히 이해해보자.")]),t._v(" "),v("h3",{attrs:{id:"⏹-캡슐화"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#⏹-캡슐화"}},[t._v("#")]),t._v(" ⏹ 캡슐화")]),t._v(" "),v("ul",[v("li",[t._v("개체 내부에서 데이터와 동작이 긴밀하게 결합된다.\n"),v("ul",[v("li",[t._v("Data"),v("code",[t._v("(=변수)")]),t._v(" and behaviour"),v("code",[t._v("(=함수)")]),t._v(" are tightly coupled inside an object")])])]),t._v(" "),v("li",[v("strong",[t._v("운영의 정보 구조와 구현 세부 정보는 모두 외부로부터 숨겨져 있다.")]),t._v(" "),v("ul",[v("li",[t._v("Both the information structure and implementation details of its operations are hidden from the outer world")])])])]),t._v(" "),v("p",[t._v("캡슐화는 Data와 Behaviour가 객체안에 단단히 결합되어있다.")]),t._v(" "),v("ul",[v("li",[t._v("객체지향에 대해 생각해보자.")]),t._v(" "),v("li",[t._v("Procedural(절차지향) 프로그래밍과 비교하면\n"),v("ul",[v("li",[t._v("우리가 솔루션을 디자인하면 몇가지 기능을 정의해야 할 것 이다(함수/변수)")]),t._v(" "),v("li",[t._v("대부분의 경우 함수와 변수가 논리적으로 연결되고 정의된다.")]),t._v(" "),v("li",[t._v("이 때 함수안에서 새로운 변수를 정의하고 return 할 수 있는데")]),t._v(" "),v("li",[t._v("이 때 함수(행위) ↔ 변수(data)가 밀접하게 연관되어 있다고 한다.")])])]),t._v(" "),v("li",[t._v("절차지향(Procedural) 방식은?\n"),v("ul",[v("li",[t._v("기능적으로 연관이 아무리 커도 함수와 변수를 함께 결합할 수 없다.")]),t._v(" "),v("li",[t._v("왜냐하면 C언어에는 Structure(구조)가 있기 때문에 변수와 함께 그룹화 할 수 있지만 함수와 변수를 함께 그룹화될 수 없다.")])])])]),t._v(" "),v("p",[t._v("객체에는 두가지가 있다.")]),t._v(" "),v("ul",[v("li",[t._v("Behaviour (함수) = "),v("strong",[t._v("Method = function")])]),t._v(" "),v("li",[t._v("Attribute (변수)\n"),v("ul",[v("li",[t._v("Behaviour = 함수로 정의해서 객체의 연산이나 동작을 작성")]),t._v(" "),v("li",[t._v("Attribute = 변수로 정의해서  객체의 상태를 작성")])])])]),t._v(" "),v("blockquote",[v("p",[t._v("💡 "),v("strong",[t._v("이렇게 변수와 함수를 결합할 수 있는 방법이 캡슐화의 주 개념이다.")])])])])}),[],!1,null,null,null);_.default=e.exports}}]);