(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{411:function(a,t,s){"use strict";s.r(t);var n=s(27),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"java-static-이란"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-static-이란"}},[a._v("#")]),a._v(" Java Static 이란?")]),a._v(" "),s("h3",{attrs:{id:"reference"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[a._v("#")]),a._v(" Reference")]),a._v(" "),s("p",[a._v("https://mommoo.tistory.com/24?category=577684 [개발자로 홀로 서기]")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("프로그래밍 용어로써의 Static은 정적의,고정의 뜻으로 생각하면 된다.")]),a._v(" "),s("p",[a._v("자바에서는 어떻게 쓰이나 아래의 설명을 보자.")]),a._v(" "),s("p",[a._v("먼저, 자바는 Statically Type Variable (정적 타입 변수)를 가진다.")]),a._v(" "),s("p",[a._v("예를 들어, 변수를 사용할때 아래와 같이 사용한다.")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("int라는 자료형을 미리 정해줌으로써 a 변수는 정수 실제 데이터 밖에 싣지 못한다.")]),a._v(" "),s("p",[a._v("미리 자료형을 고정하므로 Static개념이다.")]),a._v(" "),s("p",[a._v("많은 스크립트 언어가 윗 개념과의 반대인 Dynamically Type Variable(동적 타입 변수)를 가진다.")]),a._v(" "),s("p",[a._v("예를 들어, 자바스크립트에서는 아래와 같이 변수를 사용한다.")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("여기서는 var(Variable의 약자) 이라는 변수 표시와 함께 변수명 a를 선언 했을때, 실제데이터의 종류에 따라 동적으로")]),a._v(" "),s("p",[a._v("타입이 결정된다. 윗 예시는 실제데이터가 정수형 이므로 a의 자료형은 정수형이 되는것이다.")]),a._v(" "),s("p",[a._v("두번째로, 자바는 static 예약어를 제공한다. 윗 개념에서 살펴 보았드시, Static은 정적의 고정의 뜻으로 생각하면 된다. 아래의 예시를 보자.")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n\n\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("윗 예시는 int 형 변수 a 를 static 예악어를 통해 고정시켜 놓았다. 어딜 고정 시켜 놓은 것 일까?")]),a._v(" "),s("p",[a._v("답은 메모리에 미리 고정시켜 놓은것이다.")]),a._v(" "),s("p",[a._v("클래스 안의 변수를 사용하기 위해서는 인스턴스를 생성해야 한다.")]),a._v(" "),s("p",[a._v("ex)")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticTest")]),a._v(" st "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n st"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n st"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n")])])]),s("p",[a._v("<인스턴스 변수. 변수 or 메서드>")]),a._v(" "),s("p",[a._v("하지만, static 예약어를 사용하면 인스턴스를 생성하기 전에 미리 메모리에 올려놔 고정시킨다.")]),a._v(" "),s("p",[a._v("이렇게 되면 무슨 특징이 있을까? 아래와 같은 특징이 있다.")]),a._v(" "),s("ol",[s("li",[a._v("인스턴스를 생성한 후 이용가능 하던 변수가 static 예약어를 사용함으로써, 미리 메모리에 올라가 있으므로, 인스턴스 생성 없이 바로 사용가능하다.")])]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" \n\n  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("StaticTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("  \n")])])]),s("p",[a._v("<클래스.변수 or 메서드>")]),a._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[a._v("StaticTest 의 인스턴스를 몇개를 생성하든 a의 변수는 이미 메모리에 올라가 있으므로,")])]),a._v(" "),s("p",[a._v("인스턴스 마다 변수 a가 생기는 것이 아니라 메모리에 미리 올라가 있던 변수 a를 공유한다.")]),a._v(" "),s("p",[a._v("따라서 static 예약어를 사용한 변수는 공유변수 라고도 불린다.")]),a._v(" "),s("p",[a._v("변수a를 공유하므로 변수a크기 만큼 메모리를 아낄 수 도 있다.")]),a._v(" "),s("p",[a._v("메서드도 똑같이 생각하면 된다.")]),a._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[a._v("만약 변수b를 static 메서드 add안에다가 사용하면 오류가 발생한다.")])]),a._v(" "),s("p",[a._v("이유는 int b는 StaticTest의 인스턴스가 생성되어야 쓸수 있는 멤버변수지만,")]),a._v(" "),s("p",[a._v("static public void add()는 인스턴스가 생기길 기다려주지 않고 바로 메모리에 올라가기 때문에")]),a._v(" "),s("p",[a._v("StaticTest안에 일반 멤버변수 b는 쓰지 못한다.")]),a._v(" "),s("p",[a._v("프로그래밍 개념으로서의 static은 고정하다, 정적이다. 라는 뜻이므로")]),a._v(" "),s("p",[a._v("자바 뿐만 아니라 static 개념이 나오는 모든 프로그래밍을 윗 개념으로 이해하면 좋을 것 이다.")])])}),[],!1,null,null,null);t.default=e.exports}}]);