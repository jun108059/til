(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{557:function(s,t,a){s.exports=a.p+"assets/img/generic.78bd38d7.png"},807:function(s,t,a){"use strict";a.r(t);var n=a(27),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"generic이란"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#generic이란"}},[s._v("#")]),s._v(" Generic이란?")]),s._v(" "),n("p",[n("img",{attrs:{src:a(557),alt:"img"}})]),s._v(" "),n("blockquote",[n("p",[s._v("Generic이란 Class 내부에서 사용할 데이터의 타입을 외부에서 지정하는 기법")])]),s._v(" "),n("p",[s._v("Java에서 Collection은 "),n("code",[s._v("List<T>")]),s._v(", "),n("code",[s._v("Set<T>")]),s._v(", "),n("code",[s._v("Map<T,T>")]),s._v(" 등의 방식으로 활용하였다. "),n("code",[s._v("<>")]),s._v("를 사용해서 안에 들어가야할 "),n("code",[s._v("T")]),s._v("는 "),n("code",[s._v("Type")]),s._v("을 의미한다.")]),s._v(" "),n("p",[s._v("간단한 예시를 살펴보자.")]),s._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Generic_Test")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Generic_Data")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("T")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// main")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestCode")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    fun "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" test1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Generic_Test")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("test1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Generic_Data")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"testdata"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("test1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Generic_Data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" test2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Generic_Test")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("test2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Generic_Data")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("test2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Generic_Data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// 결과\ntestdata\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),s._v("\n\nProcess finished with "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" code "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),n("p",[s._v("위 Code를 보면 "),n("code",[s._v("Generic_Test")]),s._v("클래스의 타입은 "),n("T",[s._v("로 설정되어있다.")])],1),s._v(" "),n("p",[s._v("그러므로 "),n("code",[s._v("Generic_Test")]),s._v("를 사용할때는 외부에서 Type을 지정해주고 사용해야 한다!")]),s._v(" "),n("p",[s._v("변수 "),n("code",[s._v("Generic_Data")]),s._v("는 "),n("code",[s._v("Type")]),s._v("를 외부로부터 지정받아 사용하게 된다. 그렇기 때문에 "),n("code",[s._v("test1")]),s._v("에서는 String을 지정받아 사용하였고"),n("code",[s._v("test2")]),s._v("는 Int를 지정받아 사용하였다.")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("현재는 "),n("code",[s._v("Type")]),s._v(" 을 1개를 지정해서 사용하였는데. 2개를 지정해서 사용하고 싶을 때에는 "),n("code",[s._v("<T, T>")]),s._v(" 를 사용하면 된다.")]),s._v(" "),n("p",[s._v("Java의 Collection 에서는 "),n("code",[s._v("Map<T, T>")]),s._v(" 이 2개의 타입을 지정해서 사용하는 경우이다.")]),s._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Generic_Test2")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" T2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Data_1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" T1"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Data_2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" T2"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestCode")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    fun "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        val test3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Generic_Test2")]),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("test3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Data_1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Testdata2"')]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token class-name"}},[n("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("test3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),s._v("Data_2")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${test3.Data_1}, ${test3.Data_2}"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// 결과\nTestdata2, "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v("\n\nProcess finished with "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" code "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),n("p",[s._v("위 Code 의 경우를 보면 "),n("code",[s._v("T1")]),s._v(" 과 "),n("code",[s._v("T2")]),s._v(" 를 사용하였다.")]),s._v(" "),n("p",[s._v("풀어서 설명하면 "),n("code",[s._v("Type")]),s._v(" 를 2개를 사용하였고 "),n("code",[s._v("T1")]),s._v(" 에는 "),n("code",[s._v("String")]),s._v(" 을 "),n("code",[s._v("T2")]),s._v(" 에는 "),n("code",[s._v("Int")]),s._v(" 를 사용한 경우이다.")]),s._v(" "),n("hr"),s._v(" "),n("p",[n("code",[s._v("Generic")]),s._v(" 은 "),n("code",[s._v("Method")]),s._v(" 에서도 사용할수 있다.")]),s._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TestCode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Test")]),s._v("\n    fun "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test3_Method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ABCD"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1234")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n    fun "),n("span",{pre:!0,attrs:{class:"token generics"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("T1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" T2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Test3_Method")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("INPUT1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" T1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" INPUT2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" T2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Int")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" INPUT1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" INPUT2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[s._v("// 결과\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n\nProcess finished with "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exit")]),s._v(" code "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),n("p",[s._v("위 Code를 보면 "),n("code",[s._v("Test3_Method")]),s._v("라는 "),n("code",[s._v("Method")]),s._v(" 를 사용할때 받아오는 "),n("code",[s._v("Type")]),s._v(" 을 지정해주지 않았다. 그리고 "),n("code",[s._v("Method")]),s._v(" 명을 선언하기 전에 "),n("code",[s._v("<T1, T2>")]),s._v(" 라는 "),n("code",[s._v("Generic")]),s._v(" 을 사용하였고 "),n("code",[s._v("INPUT1")]),s._v(" 과 "),n("code",[s._v("INPUT2")]),s._v(" 는 해당 "),n("code",[s._v("Type")]),s._v(" 을 사용하게 된다.")]),s._v(" "),n("p",[n("code",[s._v("Test_Method")]),s._v(" 는 어떠한 값이던 데이터의 "),n("code",[s._v("Length")]),s._v(" 를 반환하게 된다.")]),s._v(" "),n("p",[n("code",[s._v('"ABCD"')]),s._v(" 와 "),n("code",[s._v("1234")]),s._v(" 의 "),n("code",[s._v("Length")]),s._v(" 값은 각각 "),n("code",[s._v("4")]),s._v("이므로 결과값은 "),n("code",[s._v("8")]),s._v("이다.")]),s._v(" "),n("div",{staticClass:"language-markdown extra-class"},[n("pre",{pre:!0,attrs:{class:"language-markdown"}},[n("code",[s._v("E - Element\nK - Key\nN - Number\nT - Type\nV - Value\nR - ReturnType\n")])])]),n("p",[s._v("위 내용은 "),n("code",[s._v("Generic")]),s._v(" 의 "),n("code",[s._v("Parameter")]),s._v(" 이다.")]),s._v(" "),n("p",[s._v("위 내용을 따라서 "),n("code",[s._v("Type")]),s._v(" 은 "),n("code",[s._v("T")]),s._v(" 를 쓰지 않으면 에러가 발생하지는 않지만 이전의 라이브러리 등의 호환성이나 가독성을 위해서라면 따르는 것이 좋겠다.")]),s._v(" "),n("h3",{attrs:{id:"reference"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reference"}},[s._v("#")]),s._v(" Reference")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://medium.com/@yeongpal/generic-%EC%9D%B4%EB%9E%80-151fc913648a",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://medium.com/@yeongpal/generic-이란-151fc913648a"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);t.default=e.exports}}]);