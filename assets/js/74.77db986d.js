(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{727:function(a,e,t){"use strict";t.r(e);var s=t(27),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"_6-pod-설정-살펴보기"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-pod-설정-살펴보기"}},[a._v("#")]),a._v(" 6.Pod 설정 살펴보기")]),a._v(" "),t("h2",{attrs:{id:"_1-container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-container"}},[a._v("#")]),a._v(" 1. Container")]),a._v(" "),t("h3",{attrs:{id:"_1-1-pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-pod"}},[a._v("#")]),a._v(" 1-1) Pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-1\nspec:\n  containers:\n  - name: container1\n    image: kubetm/p8000\n    ports:\n    - containerPort: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v("\n  - name: container2\n    image: kubetm/p8080\n    ports:\n    - containerPort: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n")])])]),t("h3",{attrs:{id:"_1-2-replicationcontroller"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-replicationcontroller"}},[a._v("#")]),a._v(" 1-2) ReplicationController")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: replication-1\nspec:\n  replicas: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),a._v("\n  selector:\n    app: rc\n  template:\n    metadata:\n      name: pod-1\n      labels:\n        app: rc\n    spec:\n      containers:\n      - name: container\n        image: kubetm/init\n")])])]),t("h2",{attrs:{id:"_2-label"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-label"}},[a._v("#")]),a._v(" 2. Label")]),a._v(" "),t("h3",{attrs:{id:"_2-1-pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-pod"}},[a._v("#")]),a._v(" 2-1) Pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-2\n  labels:\n    type: web\n    lo: dev\nspec:\n  containers:\n  - name: container\n    image: kubetm/init\n")])])]),t("h3",{attrs:{id:"_2-2-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-service"}},[a._v("#")]),a._v(" 2-2) Service")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: Service\nmetadata:\n  name: svc-1\nspec:\n  selector:\n    type: web\n  ports:\n  - port: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("\n")])])]),t("h2",{attrs:{id:"_3-node-schedule"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-node-schedule"}},[a._v("#")]),a._v(" 3. Node Schedule")]),a._v(" "),t("h3",{attrs:{id:"_3-1-pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-pod"}},[a._v("#")]),a._v(" 3-1) Pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-3\nspec:\n  nodeSelector:\n    kubernetes.io/hostname: k8s-node1\n  containers:\n  - name: container\n    image: kubetm/init\n")])])]),t("h3",{attrs:{id:"_3-2-pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-pod"}},[a._v("#")]),a._v(" 3-2) Pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-4\nspec:\n  containers:\n  - name: container\n    image: kubetm/init\n    resources:\n      requests:\n        memory: 2Gi\n      limits:\n        memory: 3Gi\n")])])]),t("h2",{attrs:{id:"_4-sample-yaml"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-sample-yaml"}},[a._v("#")]),a._v(" 4. Sample Yaml")]),a._v(" "),t("h3",{attrs:{id:"pod"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[a._v("#")]),a._v(" * Pod")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("apiVersion: v1\nkind: Pod\nmetadata:\n  name: pod-4                           "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Pod 이름")]),a._v("\n  labels:                               "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Label ")]),a._v("\n    type: web                           \n    lo: dev  \nspec:\n  nodeSelector:                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Node 직접 지정시")]),a._v("\n    kubernetes.io/hostname: k8s-node1   \n  containers:\n  - name: container                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Container 이름")]),a._v("\n    image: kubetm/init                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 이미지 선택")]),a._v("\n    ports:\n    - containerPort: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v("               \n    resources:                          "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 자원 사용량 설정")]),a._v("\n      requests:\n        memory: 1Gi\n      limits:\n        memory: 1Gi\n")])])]),t("h2",{attrs:{id:"_5-kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-kubectl"}},[a._v("#")]),a._v(" 5. Kubectl")]),a._v(" "),t("h3",{attrs:{id:"create"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[a._v("#")]),a._v(" * Create")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 파일이 있을 경우")]),a._v("\nkubectl create -f ./pod.yaml\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 내용과 함께 바로 작성")]),a._v("\nkubectl create -f - "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("END\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\nspec:\n  containers:\n  - name: container\n    image: kubetm/init\nEND")]),a._v("\n")])])]),t("h3",{attrs:{id:"apply"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apply"}},[a._v("#")]),a._v(" * Apply")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("kubectl apply -f ./pod.yaml\n")])])]),t("h3",{attrs:{id:"get"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get"}},[a._v("#")]),a._v(" * Get")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 기본 Pod 리스트 조회 (Namepsace 포함)")]),a._v("\nkubectl get pods -n defalut\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 좀더 많은 내용 출력")]),a._v("\nkubectl get pods -o wide\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Pod 이름 지정")]),a._v("\nkubectl get pod pod1\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Json 형태로 출력")]),a._v("\nkubectl get pod pod1 -o json\n")])])]),t("h3",{attrs:{id:"describe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#describe"}},[a._v("#")]),a._v(" * Describe")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 상세 출력")]),a._v("\nkubectl describe pod pod1\n")])])]),t("h3",{attrs:{id:"delete"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[a._v("#")]),a._v(" * Delete")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 파일이 있을 경우 생성한 방법 그대로 삭제")]),a._v("\nkubectl delete -f ./pod.yaml\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 내용과 함께 바로 작성한 경우 생성한 방법 그대로 삭제")]),a._v("\nkubectl delete -f - "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("END\napiVersion: v1\nkind: Pod\nmetadata:\n  name: pod1\nspec:\n  containers:\n  - name: container\n    image: kubetm/init\nEND")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Pod 이름 지정")]),a._v("\nkubectl delete pod pod1\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("### Exec")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Pod이름이 pod1인 Container로 들어가기 (나올땐 exit)")]),a._v("\n\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" pod1 -it /bin/bash\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#Container가 두개 이상 있을때 Container이름이 con1인 Container로 들어가기 ")]),a._v("\n\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("exec")]),a._v(" pod1 -c con1 -it /bin/bash\n\n")])])]),t("h2",{attrs:{id:"_6-tips"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-tips"}},[a._v("#")]),a._v(" 6. Tips")]),a._v(" "),t("h3",{attrs:{id:"apply-vs-create"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#apply-vs-create"}},[a._v("#")]),a._v(" * Apply Vs Create")]),a._v(" "),t("blockquote",[t("p",[a._v("둘다 자원을 생성할때 사용할 수 있지만, [Create]는 기존에 같은 이름의 Pod가 존재하면 생성이 안되고, [Apply]는 기존에 같은 이름의 Pod가 존재하면 업데이트됨")])]),a._v(" "),t("h4",{attrs:{id:"referenece"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#referenece"}},[a._v("#")]),a._v(" Referenece")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Pod Overview")]),a._v(" : https://kubernetes.io/docs/concepts/workloads/pods/pod-overview/")]),a._v(" "),t("li",[t("strong",[a._v("Labels and Selectors")]),a._v(" : https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/")]),a._v(" "),t("li",[t("strong",[a._v("Assigning Pods to Nodes")]),a._v(" : https://kubernetes.io/docs/concepts/configuration/assign-pod-node/")])])])}),[],!1,null,null,null);e.default=n.exports}}]);